<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kazma233.blog.dao.article.ArticleDao">

    <resultMap id="BaseResultMap" type="com.kazma233.blog.entity.article.Article">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="subtitle" jdbcType="VARCHAR" property="subtitle"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="read_num" jdbcType="INTEGER" property="readNum"/>
        <result column="archive_date" jdbcType="VARCHAR" property="archiveDate"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="category_id" jdbcType="VARCHAR" property="categoryId"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
    </resultMap>

    <resultMap id="FullResultMap" extends="BaseResultMap" type="com.kazma233.blog.vo.article.ArticleFull">
        <id column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        title,
        subtitle,
        create_time,
        update_time,
        read_num,
        archive_date,
        state,
        category_id,
        tags
    </sql>

    <sql id="Full_Column_List">
        id,
        title,
        subtitle,
        create_time,
        update_time,
        read_num,
        archive_date,
        state,
        category_id,
        tags,
        content
    </sql>

    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article_table
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectFullById" parameterType="java.lang.String" resultMap="FullResultMap">
        select
        <include refid="Full_Column_List"/>
        from blog_article_table
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="queryArticleByArgs" parameterType="com.kazma233.blog.vo.article.ArticleQueryVO"
            resultType="com.kazma233.blog.vo.article.ArticleCategoryVO">
        select
        bat.id,
        bat.title,
        bat.subtitle,
        bat.create_time,
        bat.update_time,
        bat.read_num,
        bat.archive_date,
        bat.state,
        bat.category_id,
        bat.tags,
        bac.category_name
        from blog_article_table bat
        left join blog_article_category bac on bat.category_id = bac.id
        <where>
            <if test="title != null">
                title like "%"#{title}"%"
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="archiveDate != null">
                and archive_date = #{archiveDate}
            </if>
            <if test="textState != null">
                and state = #{textState}
            </if>
            <choose>
                <when test="startTime != null and endTime == null">
                    AND bat.create_time &gt; #{startTime}
                </when>
                <when test="startTime == null and endTime != null">
                    AND bat.create_time &lt; #{startTime}
                </when>
                <when test="startTime != null and endTime != null">
                    AND bat.create_time between #{startTime} and #{endTime}
                </when>
            </choose>
        </where>
        ORDER BY create_time DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <if test="offset != null">
            OFFSET #{offset}
        </if>
    </select>

    <insert id="insert" parameterType="com.kazma233.blog.vo.article.ArticleFull">
        insert into blog_article_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="subtitle != null">
                subtitle,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="readNum != null">
                read_num,
            </if>
            <if test="archiveDate != null">
                archive_date,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="subtitle != null">
                #{subtitle,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readNum != null">
                #{readNum,jdbcType=INTEGER},
            </if>
            <if test="archiveDate != null">
                #{archiveDate,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.kazma233.blog.vo.article.ArticleFull">
        update blog_article_table
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="subtitle != null">
                subtitle = #{subtitle,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readNum != null">
                read_num = #{readNum,jdbcType=INTEGER},
            </if>
            <if test="archiveDate != null">
                archive_date = #{archiveDate,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.kazma233.blog.vo.article.ArticleFull">
        update blog_article_table
        set title        = #{title,jdbcType=VARCHAR},
            subtitle     = #{subtitle,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            read_num     = #{readNum,jdbcType=INTEGER},
            archive_date = #{archiveDate,jdbcType=VARCHAR},
            state        = #{state,jdbcType=VARCHAR},
            category_id  = #{categoryId,jdbcType=VARCHAR},
            tags         = #{tags,jdbcType=VARCHAR},
            content      = #{content,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>